###########################MASTER
- name: MASTER
  hosts: master    # playbook запустится для master
  become: yes   # команда позволяет ansible использовать права root.
  become_user: root
  tasks:        # ниже начинается список задач.

  - name: Installing package
    apt:  #устанавливаем нужные пакеты
     name:
        - postgresql
        - git
        - python3
        - python3-pip
        - libpq-dev
        - sshpass

  - name: Pip install for .py bot  #зависимости для нашего бота тоже сразу установим
    shell: pip install paramiko telegram python-telegram-bot==13.7 pathlib urllib3==1.26.15 python-dotenv psycopg2

  - name: CopyConfFile  #копирование заранее подготовленного файла postgresql.conf, никаких интересных настроек в нем нет
    copy:
      src: postgresql.conf
      dest: /etc/postgresql/14/main/postgresql.conf

  - name: AddConnettoon  #разрешаем подключатсья к бд
    shell: echo "host all all all trust" >>  /etc/postgresql/14/main/pg_hba.conf

  - name: Add Repl user in hba_conf  #добавили разрешение второму хосту на репликацию, зависит от указанного в инвентори ИП хост1
    shell: echo "host replication all {{ hostvars['host2'].ansible_host }}/24 trust" >>  /etc/postgresql/14/main/pg_hba.conf

  - name: restart service postgresql
    shell: service postgresql restart

  - name: set password postgres   #задали пароль postgres
    shell: sudo -u postgres -i psql -c "ALTER ROLE postgres PASSWORD '{{ hostvars['host1'].ansible_postgres_password }}';"

  - name: create repl slot   #создали репл слот
    shell: sudo -u postgres -i psql -c "select pg_create_physical_replication_slot('replication_slot');"

  - name: Create PostgresqlUser {{ hostvars['host1'].ansible_db_user }} #создали пользователя для бота 
    shell: sudo -u postgres -i psql -c "create user {{ hostvars['host1'].ansible_db_user }};"

  - name: set password userDBbot   #задали пароль postgres
    shell: sudo -u postgres -i psql -c "ALTER ROLE {{ hostvars['host1'].ansible_db_user }} PASSWORD '{{ hostvars['host1'].ansible_db_password }}';"


  - name: Create ReplUser  #создали пользователя для репликации
    community.postgresql.postgresql_user:
      name: "{{ hostvars['host1'].ansible_repl_user }}"
      role_attr_flags: replication
      password: "{{ hostvars['host1'].ansible_repl_password }}"
      login_host: 127.0.0.1
      login_user: postgres
      login_password: "{{ hostvars['host1'].ansible_postgres_password }}"


  - name: CREATE DB  #создали БД {{ hostvars['host1'].ansible_db }}
    shell: sudo -u postgres -i psql -c "CREATE DATABASE {{ hostvars['host1'].ansible_db }} OWNER  {{ hostvars['host1'].ansible_db_user }};";

  - name: CREATE TABLE MAILS   #Создали таблицу для мэйов
    shell: sudo -u postgres -i psql -d {{ hostvars['host1'].ansible_db }} -c "CREATE TABLE mails_s (id  SERIAL PRIMARY KEY, mails_s text);";

  - name: CRATE TABLE PHONES NUMS   #создали таблицу для номеров телефонов
    shell: sudo -u postgres -i psql -d {{ hostvars['host1'].ansible_db }} -c "CREATE TABLE phone_num (id  SERIAL PRIMARY KEY, phone_num VARCHAR(100));";

  - name: GRANT ALL PRIV FOR BD   #GRANT ALL PRIV FOR BD
    shell: sudo -u postgres -i psql -d {{ hostvars['host1'].ansible_db }} -c "GRANT ALL PRIVILEGES ON DATABASE {{ hostvars['host1'].ansible_db }} TO {{ hostvars['host1'].ansible_db_user }};"

  - name: GRANT ALL PRIV FOR BD   #GRANT ALL PRIV FOR BD
    shell: sudo -u postgres -i psql -d {{ hostvars['host1'].ansible_db }} -c "GRANT USAGE, SELECT ON SEQUENCE phone_num_id_seq TO {{ hostvars['host1'].ansible_db_user }};"

  - name: GRANT ALL PRIV FOR BD   #GRANT ALL PRIV FOR BD
    shell: sudo -u postgres -i psql -d {{ hostvars['host1'].ansible_db }} -c "GRANT USAGE, SELECT ON SEQUENCE mails_s_id_seq TO {{ hostvars['host1'].ansible_db_user }};"

  - name: GRANT ALL PRIV FOR BD   #GRANT ALL PRIV FOR BD
    shell: sudo -u postgres -i psql -d {{ hostvars['host1'].ansible_db }} -c "GRANT ALL PRIVILEGES ON TABLE mails_s TO {{ hostvars['host1'].ansible_db_user }};"
    
  - name: GRANT ALL PRIV FOR BD   #GRANT ALL PRIV FOR BD
    shell: sudo -u postgres -i psql -d {{ hostvars['host1'].ansible_db }} -c "GRANT ALL PRIVILEGES ON TABLE phone_num TO {{ hostvars['host1'].ansible_db_user }};"

  - name: restart service postgresql
    shell: service postgresql restart
  - name: Give orives for read logs
    shell: chmod 777 /tmp/logs/ -R
######################################SLAVE
- name: SLAVE
  hosts: slave    # playbook запустится для slave
  become: yes   # команда позволяет ansible использовать права root.
  become_user: root
  tasks:        # ниже начинается список задач.

  - name: Installing package
    apt:
     name:
        - postgresql
        - libpq-dev
      
  - name: Create repl_user
    ansible.builtin.user:
     name: "{{ hostvars['host1'].ansible_repl_user }}"
     shell: /bin/bash
     groups: postgres,root
     append: yes       
     
  - name: stop postresql
    shell: service postgresql stop

  - name: Delete /var/lib/postgresql/14/main/*
    shell: sudo rm -rf /var/lib/postgresql/14/main/*
    
  - name: chmod
    shell: chmod 777 /var/lib/postgresql/ -R

  - name: try replication
    shell: sudo -i -u {{ hostvars['host1'].ansible_repl_user }} pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host={{ hostvars['host1'].ansible_host }} --port=5432

  - name: start postresql
    shell: service postgresql start
###########################################BOT
- name: Donwload BOT
  hosts: bot     # playbook запустится для пк на котором будет бот
  tasks:    # ниже начинается список задач.
  - name: 
    shell: git clone https://github.com/MrPiklz/DontCopyThis
